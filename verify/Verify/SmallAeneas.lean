-- THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS
-- [small_aeneas]
import Aeneas
open Aeneas.Std Result Error
set_option linter.dupNamespace false
set_option linter.hashCommand false
set_option linter.unusedVariables false

namespace small_aeneas

/- [small_aeneas::m]:
   Source: 'src/lib.rs', lines 16:0-18:1 -/
def m (x : U64) (y : U64) : Result U128 :=
  do
  let i ← (↑(UScalar.cast .U128 x) : Result U128)
  let i1 ← (↑(UScalar.cast .U128 y) : Result U128)
  i * i1

/- [small_aeneas::FieldElement51]
   Source: 'src/lib.rs', lines 36:0-36:47 -/
@[reducible] def FieldElement51 := (Array U64 5#usize)

/- [small_aeneas::{core::clone::Clone for small_aeneas::FieldElement51}::clone]:
   Source: 'src/lib.rs', lines 35:15-35:20 -/
def Clonesmall_aeneasFieldElement51.clone
  (self : FieldElement51) : Result FieldElement51 :=
  ok self

/- Trait implementation: [small_aeneas::{core::clone::Clone for small_aeneas::FieldElement51}]
   Source: 'src/lib.rs', lines 35:15-35:20 -/
@[reducible]
def core.clone.Clonesmall_aeneasFieldElement51 : core.clone.Clone
  FieldElement51 := {
  clone := Clonesmall_aeneasFieldElement51.clone
}

/- Trait implementation: [small_aeneas::{core::marker::Copy for small_aeneas::FieldElement51}]
   Source: 'src/lib.rs', lines 35:9-35:13 -/
@[reducible]
def core.marker.Copysmall_aeneasFieldElement51 : core.marker.Copy
  FieldElement51 := {
  cloneInst := core.clone.Clonesmall_aeneasFieldElement51
}

/- [small_aeneas::{small_aeneas::FieldElement51}::reduce::LOW_51_BIT_MASK]
   Source: 'src/lib.rs', lines 68:8-68:54 -/
@[global_simps]
def FieldElement51.reduce.LOW_51_BIT_MASK_body : Result U64 :=
  do
  let i ← 1#u64 <<< 51#i32
  i - 1#u64
@[global_simps, irreducible]
def FieldElement51.reduce.LOW_51_BIT_MASK : U64 :=
  eval_global FieldElement51.reduce.LOW_51_BIT_MASK_body

/- [small_aeneas::{small_aeneas::FieldElement51}::reduce]:
   Source: 'src/lib.rs', lines 67:4-100:5 -/
def FieldElement51.reduce
  (limbs : Array U64 5#usize) : Result FieldElement51 :=
  do
  let i ← Array.index_usize limbs 0#usize
  let c0 ← i >>> 51#i32
  let i1 ← Array.index_usize limbs 1#usize
  let c1 ← i1 >>> 51#i32
  let i2 ← Array.index_usize limbs 2#usize
  let c2 ← i2 >>> 51#i32
  let i3 ← Array.index_usize limbs 3#usize
  let c3 ← i3 >>> 51#i32
  let i4 ← Array.index_usize limbs 4#usize
  let c4 ← i4 >>> 51#i32
  let i5 ← (↑(i &&& FieldElement51.reduce.LOW_51_BIT_MASK) : Result U64)
  let limbs1 ← Array.update limbs 0#usize i5
  let i6 ← Array.index_usize limbs1 1#usize
  let i7 ← (↑(i6 &&& FieldElement51.reduce.LOW_51_BIT_MASK) : Result U64)
  let limbs2 ← Array.update limbs1 1#usize i7
  let i8 ← Array.index_usize limbs2 2#usize
  let i9 ← (↑(i8 &&& FieldElement51.reduce.LOW_51_BIT_MASK) : Result U64)
  let limbs3 ← Array.update limbs2 2#usize i9
  let i10 ← Array.index_usize limbs3 3#usize
  let i11 ← (↑(i10 &&& FieldElement51.reduce.LOW_51_BIT_MASK) : Result U64)
  let limbs4 ← Array.update limbs3 3#usize i11
  let i12 ← Array.index_usize limbs4 4#usize
  let i13 ← (↑(i12 &&& FieldElement51.reduce.LOW_51_BIT_MASK) : Result U64)
  let limbs5 ← Array.update limbs4 4#usize i13
  let i14 ← c4 * 19#u64
  let i15 ← Array.index_usize limbs5 0#usize
  let i16 ← i15 + i14
  let limbs6 ← Array.update limbs5 0#usize i16
  let i17 ← Array.index_usize limbs6 1#usize
  let i18 ← i17 + c0
  let limbs7 ← Array.update limbs6 1#usize i18
  let i19 ← Array.index_usize limbs7 2#usize
  let i20 ← i19 + c1
  let limbs8 ← Array.update limbs7 2#usize i20
  let i21 ← Array.index_usize limbs8 3#usize
  let i22 ← i21 + c2
  let limbs9 ← Array.update limbs8 3#usize i22
  let i23 ← Array.index_usize limbs9 4#usize
  let i24 ← i23 + c3
  let limbs10 ← Array.update limbs9 4#usize i24
  ok limbs10

end small_aeneas
